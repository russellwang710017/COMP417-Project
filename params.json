{
  "name": "Implementation of Several Planning and Navigation Algorithms Using Minecraft as Experimental Platform",
  "tagline": "Ching-Chia Wang",
  "body": "### Introduction\r\n\r\nEntering the first leaf of the 21st century, the world is bound with technology. People’s daily lives are filled with computers, cell phones, Internet, etc. Among the quickly evolving technologies, robots and intelligent systems have become an increasingly important part of the society. More and more routine procedures that used to be performed by human labor can now be done by robots. The ultimate goal is to let robots function intelligently and autonomously, just like a human being. Therefore, Robotics research topics include localization, motion planning, computer vision, and kinematics, just to name a few. \r\n\r\nWhile the use of robots for repetitive yet high-risk acts such as car-manufacturing is not a new idea, the use of robots to perform works that require more intelligence such as playing Go is the popular research interest nowadays. While the process of learning and logical reasoning is rather intuitive for human species, to enable artificial intelligence to perform the same act requires extensive research on artificial intelligence and machine learning. In other words, human have to come up with intelligent algorithms for robots to learn and reason like human. \r\n\r\nAs such, studies on robots often involve extensive experiments besides theoretical work. In other words, when an algorithm is made, a robot programmed with the algorithm has to be put into the field to see if the algorithm actually works. The process of testing a robot can get quite complicated if noises are introduced, which is often the case in real lives. To solve this problem, there came the idea of using software platform that mimic real world environment for robotic experiment. One existing platform for such purpose is Gazebo. However, the use of Gazebo is not intuitive as the understanding of the robotics operating system(ROS) is required. Also, assets and algorithms are not provided by Gazebo so users have to come up with them. Beside Gazebo and ROS, there does not seem to be any other platform and operating system that serve exclusively such purpose. Although game engine such as Unity provides users with assets and physics, algorithms still have to be sourced and user bases still have to be established and trained. Therefore, there really is a lack of option regarding this issue.\r\n\r\nFortunately, a group of researchers from Brown University realize this struggle and propose the idea of using Minecraft as a testing platform for robotic studies.\r\nMinecraft is an open-world video game first made in 2011, featuring state and action space that allow users to create complex system such as logic gates. Therefore, Minecraft can be used as a platform to model a wide range of robotics tasks including cooking assistance, manufacturing, object retrieval, etc. Minecraft can basically achieve the same thing that Gazebo does.\r\n\r\nThe group of researchers from Brown University created BurlapCraft, an open source Minecraft mod, in order to model different tasks within Minecraft. BurlapCraft simplifies the process of AI development in three ways. First, the Minecraft environment makes constructing experiments simple for developers and enables rapid prototyping and experiment setup. Secondly, BURLAP provides a myriad of extensible algorithms, which allows easy iteration and development of task models and algorithms. Thirdly, the familiarity of Minecraft makes the process of recruiting and training users trivial.\r\n\r\nWhile the group from Brown University demonstrated the execution of A*, BFS, RMax, language understanding, and learning language groundings from user demonstrations in five Minecraft dungeons, this paper aims to further validate the usefulness of BurlapCraft and Minecraft as a robotic testing platform by implementing\r\nseveral non-trivial planning and navigation algorithms on the platform.\r\n### Support or Contact\r\n\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}